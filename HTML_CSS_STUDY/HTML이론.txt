HTML 연대기 : http://www.martinrinehart.com/frontend-engineering/knowits/knowits.html
HTML 통계 : https://www.advancedwebranking.com/html/
도널드 커누스:미국의 저명한 컴퓨터 과학자
팀버너스리:최초의 웹브라우저 만든사람,HTTP통신규약(웹브라우저,웹서버),HTML(웹페이지정보담고있는 언어)

웹브라우저(클라이언트):웹페이를 서버에 요청
웹서버(서버):서버는 브라우저에 응답한다

세상에는 정말 많은 언어가 있습니다. 필자도 모든 언어를 알지 못합니다. 어떤 언어는 다른 언어를 만듭니다. 이를테면 C는 많은 언어들의 어버이입니다. 많은 언어들이 C로 만들어져 있습니다. 또 어떤 언어는 대체 불가합니다. 이를테면 웹페이지를 만드는 언어는 HTML,CSS,JavaScript 밖에 없습니다. 브라우저는 이러한 언어 외에는 어떠한 언어의 문법도 이해하지 못합니다. 또 어떤 언어는 대체 가능합니다. 예를들어 데이터베이스와 웹서버를 중계해주는 역할을 하는 PHP는 Java, Python, C, C++, Ruby, Perl, JavaScript등 거의 모든 언어로 대체 가능합니다. 무엇을 선택하느냐는 여러분의 취향이거나, 여러분이 속해있는 조직의 선택입니다. 하지만 한가지 언어와 그 언어가 동작하는 방법을 이해하면 다른 언어를 배우는 것은 어렵지 않습니다. 이때의 장애물은 익숙한 언어를 놔두고 낯선 언어를 배우면서 생겨나는 조급증과 지루함 밖에 없습니다.

그렇다면 어떤 언어가 좋은 언어일까요? 정답은 없는 것 같습니다. 이를테면 PHP는 웹을 위한 언어고, 배우기가 쉽습니다. 만약 컴퓨터를 전공하지 않은 필자가 C로 웹을 시작했다면 필자는 프로그래머가 되지 못했을지도 모르겠습니다. 하지만 PHP는 좋게 말하면 관대한 언어이고, 나쁘게 말하면 어떻게 동작할지 예측이 다소 어려운 언어입니다. PHP는 개발자의 실수를 알아서 바로잡습니다. 반대로 Java나 C와 같은 엄격한 언어는 이러한 실수를 용납하지 않습니다. 이것은 장점일 수도 있고, 단점일 수도 있습니다.

정렬
대부분 최신순
컨테이너
다중사용자기능 추가
플랫폼
프로그래밍의 많은 기능들이 바로 이 모듈화를 지원하기 위한 것

프로젝트를 구성하는 인프라도 그렇고, 애플리케이션을 제작하는 순서 또한 그렇고 제 눈에는 전부 모듈로 보이네요.

전에 무슨 잡지인지 기억이 가물가물하지만,
'레고의 초창기 블럭(파츠)들이 지금에 나오는 레고 부품과도 결합된다.' 는 기사를 읽었는데.
참 대단한 거 같아요.

반면에 프로그래밍 언어에서는 버젼이 패치되거나 업데이트 되면서,
코드들이 폐기되고 심지어는 하위 버젼을 지원 안 하기도 하는데 이건 변화하는 사용자(개발자)의 니즈에 따른 긍정적인 산물이기도 하지만 표준이라는 측면에서의 의미가 있겠지만...

왜 레고와는 다른거지?라는 의문이 생깁니다. 레고는 결합원리의 단순성과 폐쇄적인 환경으로 인해서 그것이 가능했던 걸까요?


트래픽은 구글 앱 엔진하고 비교해서 서비스 해보세요~https://developers.google.com/appengine/?hl=ko
헐 트래픽이 터지다닠ㅋㅋㅋㅋ ㅠㅠ
무료호스트라 그런가봐여...
ㅎㅎㅎㅎ이렇게 트래픽이 한번 터져보면 사진크기 최적화에대한 고민도 하게되시겠네요ㅎ
문용민 서비스를 바로 상위 단계로 올리면 나중에 트래픽 안 몰릴 때 내릴 수가 없어요. 트래픽이 많이 발생하는 이미지를 티스토리나 다른 사이트에 올려서 로딩이 느리더라도 트래픽을 조절해보셔요. http://hostringer.kr 사이트도 추천해 드립니다.
개인 웹페이지정도는 라즈베리파이같은 기기로 서버를 돌리셔도 될듯합니다~
http://muchimnara.woobi.co.kr/
http://zzolain.herokuapp.com/
https://letsgo247.net/sideprojects.html
https://handsfriend.com/index

https://html5up.net/





CPU 인스트럭션 셋을 만드는 사람들
프로그래밍 언어를 만드는 사람들
운영체제를 만드는 사람들
브라우저를 만드는 사람들
웹사이트를 만드는 사람들

해결해야 할 대상이 컴퓨터 자체인 경우
현실의 문제를 해결하기 위해서 컴퓨터를 사용
 
전컴퓨터를 만들고
컴퓨터의 성능을 향상

사람들의 삶을 더 편리하게 해주는 앱이나 웹이나 게임과 같은 것
생물학자가 DNA를 분석
금융 거래 시스템을 구축

금융은 금융공학이
자신의 문제를 해결하기 위한 방법으로 개발을 시작
노암촘스키는 언어학자인데 이분이 프로그래밍 언어에 미친 영향은 심대한 것으로 알려져있습니다.
올바른 객체지향을 위한 길잡이인 디자인 패턴도 건축가들이 올바른 설계를 하기 위해서 고안한 방법론을 차용한 사례


팀버너스리가 고안한 웹은 그 시작은 미약했다. 웹서버와 웹브라우저를 만들었고, 웹페이지를 표현하는 HTML과 HTML을 서버와 브라우저가 주고 받을 수 있도록 고안된 통신규약인 HTTP가 전부였다. 하지만 지금의 웹은 원시웹과는 비교도 할 수 없도록 복잡하다.
기술서적

코드=설계도=어떻게 만들것인지 정의
